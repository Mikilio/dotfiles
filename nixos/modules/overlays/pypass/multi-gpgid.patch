From f86cf0ba0e5cb6a1236ff16d8f238b92bc49c517 Mon Sep 17 00:00:00 2001
From: Krzysztof Nazarewski <3494992+nazarewk@users.noreply.github.com>
Date: Wed, 26 Oct 2022 11:34:03 +0200
Subject: [PATCH 1/3] handle multi-recipient pass configurations

---
 pypass/passwordstore.py            | 12 ++++++++----
 pypass/tests/test_passwordstore.py |  2 +-
 2 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/pypass/passwordstore.py b/pypass/passwordstore.py
index a732b29..0c7c4d5 100644
--- a/pypass/passwordstore.py
+++ b/pypass/passwordstore.py
@@ -64,7 +64,7 @@ def __init__(
         self.path = os.path.abspath(path)
 
         # Check if a main .gpg-id exists
-        self._get_gpg_id(self.path)
+        self._get_gpg_ids(self.path)
 
         # Try to locate the git dir
         git_dir = git_dir or os.path.join(self.path, '.git')
@@ -85,7 +85,7 @@ def _is_valid_store_subpath(self, file_location):
             commonprefix = os.path.commonprefix([self.path, child_path])
             return commonprefix.startswith(self.path)
 
-    def _get_gpg_id(self, file_location):
+    def _get_gpg_ids(self, file_location):
         file_path = os.path.abspath(file_location)
 
         while self._is_valid_store_subpath(file_path):
@@ -93,7 +93,7 @@ def _get_gpg_id(self, file_location):
             gpg_id_path = os.path.join(file_path, '.gpg-id')
             if os.path.isfile(gpg_id_path):
                 with open(gpg_id_path, 'r') as gpg_id_file:
-                    return gpg_id_file.read().strip()
+                    return [line.strip() for line in gpg_id_file if line.strip()]
 
             file_path = os.path.dirname(file_path)
 
@@ -182,12 +182,16 @@ def insert_password(self, path, password):
 
         if not os.path.isdir(os.path.dirname(passfile_path)):
             os.makedirs(os.path.dirname(passfile_path))
+            
+        recipient_args = []
+        for recipient in self._get_gpg_ids(passfile_path):
+            recipient_args.extend(['-r', recipient])
 
         gpg = subprocess.Popen(
             [
                 GPG_BIN,
                 '-e',
-                '-r', self._get_gpg_id(passfile_path),
+                *recipient_args,
                 '--batch',
                 '--use-agent',
                 '--no-tty',
diff --git a/pypass/tests/test_passwordstore.py b/pypass/tests/test_passwordstore.py
index 44d1b7c..c2b1ee7 100644
--- a/pypass/tests/test_passwordstore.py
+++ b/pypass/tests/test_passwordstore.py
@@ -60,7 +60,7 @@ def tearDown(self):
     def test_constructor(self):
         # Construct on properly initialized directory
         store = PasswordStore(self.dir)
-        self.assertEqual(store._get_gpg_id(self.dir), '5C5833E3')
+        self.assertEqual(store._get_gpg_ids(self.dir), ['5C5833E3'])
         self.assertFalse(store.uses_git)
         self.assertEqual(self.dir, store.path)
 

From 27b5e8a7d0c50e2d64f9d59582a726f637c24347 Mon Sep 17 00:00:00 2001
From: Krzysztof Nazarewski <gpg@kdn.im>
Date: Wed, 7 Jun 2023 20:15:10 +0200
Subject: [PATCH 2/3] add more info to .gpg-id error

---
 pypass/passwordstore.py | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/pypass/passwordstore.py b/pypass/passwordstore.py
index 0c7c4d5..3eafa79 100644
--- a/pypass/passwordstore.py
+++ b/pypass/passwordstore.py
@@ -87,17 +87,19 @@ def _is_valid_store_subpath(self, file_location):
 
     def _get_gpg_ids(self, file_location):
         file_path = os.path.abspath(file_location)
+        tried = []
 
         while self._is_valid_store_subpath(file_path):
             # Read the .gpg-id
             gpg_id_path = os.path.join(file_path, '.gpg-id')
+            tried.append(gpg_id_path)
             if os.path.isfile(gpg_id_path):
                 with open(gpg_id_path, 'r') as gpg_id_file:
                     return [line.strip() for line in gpg_id_file if line.strip()]
 
             file_path = os.path.dirname(file_path)
 
-        raise Exception("could not find .gpg-id file")
+        raise Exception("could not find .gpg-id file for {}, tried: {}".format(file_location, " ; ".join(tried)))
 
     def get_passwords_list(self):
         """Returns a list of the passwords in the store

From 6f51145a3bc12ee79d2881204b88a82d149f3228 Mon Sep 17 00:00:00 2001
From: Krzysztof Nazarewski <gpg@kdn.im>
Date: Wed, 7 Jun 2023 20:22:42 +0200
Subject: [PATCH 3/3] os.path.abspath() -> os.path.realpath() to fix errors

---
 pypass/passwordstore.py | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/pypass/passwordstore.py b/pypass/passwordstore.py
index 3eafa79..2346035 100644
--- a/pypass/passwordstore.py
+++ b/pypass/passwordstore.py
@@ -61,7 +61,7 @@ def __init__(
             path=os.path.join(os.getenv("HOME"), ".password-store"),
             git_dir=None,
     ):
-        self.path = os.path.abspath(path)
+        self.path = os.path.realpath(path)
 
         # Check if a main .gpg-id exists
         self._get_gpg_ids(self.path)
@@ -73,7 +73,7 @@ def __init__(
             self.git_dir = git_dir
 
     def _is_valid_store_subpath(self, file_location):
-        child_path = os.path.abspath(file_location)
+        child_path = os.path.realpath(file_location)
 
         try:
             # Requires at least Python 3.5
@@ -86,7 +86,7 @@ def _is_valid_store_subpath(self, file_location):
             return commonprefix.startswith(self.path)
 
     def _get_gpg_ids(self, file_location):
-        file_path = os.path.abspath(file_location)
+        file_path = os.path.realpath(file_location)
         tried = []
 
         while self._is_valid_store_subpath(file_path):
